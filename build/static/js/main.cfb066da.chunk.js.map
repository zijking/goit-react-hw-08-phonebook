{"version":3,"sources":["components/ContactList/Contacts.module.css","components/redux/contacts/contacts-operations.js","components/redux/contacts/contacts-actions.js","components/redux/contacts/contacts-reducer.js","components/redux/users/user-operations.js","components/redux/users/users-reducer.js","components/redux/store.js","components/redux/users/user-selectors.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/redux/contacts/contacts-selectors.js","components/FormAdd/FormAddContact.js","components/Filter/Filter.js","components/ContactList/ContactsList.js","views/ContactsView.js","components/Container/Container.js","views/HomeView.js","components/Login/Login.js","views/LoginView.js","components/Registration/Registration.js","views/RegistrationView.js","App.js","reportWebVitals.js","index.js","views/css/ContactView.module.css","components/AppBar/AppBar.module.css","components/FormAdd/form.module.css"],"names":["module","exports","axios","defaults","baseURL","obj","addContacts","createAsyncThunk","newContact","a","post","response","data","deleteContacts","idcontact","delete","loadContacts","get","res","changeFilter","createAction","items","createReducer","contactOperations","fulfilled","state","payload","filter","id","_","actions","load","pending","rejected","combineReducers","token","headers","common","Authorization","loginUser","credentials","console","log","registrationUser","message","getCurrentUser","thunkAPI","getState","tokenPersister","auth","rejectWithValue","operations","logOutUser","initUser","name","email","user","operationsUser","action","isLoggedIn","middleWare","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","phoneBook","persistReducer","userData","devTools","process","middleware","persistor","persistStore","userSelectors","getIsLoggenIn","getLogin","useStyles","makeStyles","theme","root","display","alignItems","margin","spacing","UserMenu","userName","useSelector","dispatch","useDispatch","s","className","Avatar","Typography","Button","onClick","size","variant","flexGrow","menuButton","marginRight","title","ButtonAppBar","classes","url","useRouteMatch","isLoggIn","AppBar","position","Toolbar","navLink","to","align","getContacts","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","width","form","btn","FormAddContact","style","useState","setName","number","setNumber","contactsSelector","resetForm","onChange","event","currentTarget","value","onSubmit","preventDefault","normalizedName","find","window","alert","isExistContact","contactsOperation","FormControl","TextField","label","placeholder","type","fullWidth","color","connect","target","columns","minWidth","container","maxHeight","Contacts","contactsSelectors","page","rowsPerPage","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","TableBody","slice","row","hover","role","tabIndex","component","actionsOperations","ContactsView","isloggIn","useEffect","formContainer","contactsContainer","SimpleContainer","children","Container","maxWidth","styles","minHeight","justifyContent","fontWeight","fontSize","textAlign","HomeView","Login","setEmail","password","setPassword","handleChange","noValidate","autoComplete","required","LoginView","login","setLogin","objUser","RegistrationView","App","operationUser","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"+KACAA,EAAOC,QAAU,CAAC,YAAc,8BAA8B,KAAO,uBAAuB,YAAc,gC,uNCG1GC,IAAMC,SAASC,QAAU,2CAIzB,I,IA6BeC,EANH,CACVC,YAxBkBC,YAClB,uBADkC,uCAElC,WAAMC,GAAN,eAAAC,EAAA,sEACyBP,IAAMQ,KAAK,YAAaF,GADjD,cACQG,EADR,yBAESA,EAASC,MAFlB,2CAFkC,uDAyBlCC,eAjBqBN,YACrB,0BADqC,uCAErC,WAAMO,GAAN,SAAAL,EAAA,sEAEkBP,IAAMa,OAAN,oBAA0BD,IAF5C,uCAGSA,GAHT,2CAFqC,uDAkBrCE,aARmBT,YAAiB,wBAAD,sBAA0B,4BAAAE,EAAA,sEAC3CP,IAAMe,IAAN,aAD2C,cACvDC,EADuD,yBAEtDA,EAAIN,MAFkD,6CCIhDP,EAdH,CAWVc,aAbmBC,YAAa,0BCT5BC,EAAQC,YAAc,IAAD,mBACxBC,EAAkBjB,YAAYkB,WAAY,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAKnD,MAFiB,sBAAOD,GAAP,CAAcC,OAJR,cAQxBH,EAAkBV,eAAeW,WAAY,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAItD,OAFoBD,EAAME,QAAO,qBAAGC,KAAgBF,QAV7B,cAcxBH,EAAkBP,aAAaQ,WAAY,SAACK,EAAD,GAE1C,OAF8D,EAAdH,WAdzB,IAoBrBC,EAASL,YAAc,GAAD,eACzBQ,EAAQX,cAAe,SAACU,EAAD,GACtB,OAD0C,EAAdH,YAK1BK,EAAOT,aAAc,GAAD,mBACvBC,EAAkBjB,YAAY0B,SAAU,kBAAM,KADvB,cAEvBT,EAAkBjB,YAAYkB,WAAY,kBAAM,KAFzB,cAGvBD,EAAkBjB,YAAY2B,UAAW,kBAAM,KAHxB,cAKvBV,EAAkBV,eAAemB,SAAU,kBAAM,KAL1B,cAMvBT,EAAkBV,eAAeW,WAAY,kBAAM,KAN5B,cAOvBD,EAAkBV,eAAeoB,UAAW,kBAAM,KAP3B,cASvBV,EAAkBP,aAAagB,SAAU,kBAAM,KATxB,cAUvBT,EAAkBP,aAAaQ,WAAY,kBAAM,KAV1B,cAWvBD,EAAkBP,aAAaiB,UAAW,kBAAM,KAXzB,IAcXC,cAAgB,CAC7Bb,QACAM,SACAI,S,QC7CF7B,IAAMC,SAASC,QAAU,2CAEzB,I,MAAM+B,EAAQ,SACRA,GACFjC,IAAMC,SAASiC,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVjC,IAAMC,SAASiC,QAAQC,OAAOC,cAAgB,IAK5CC,EAAYhC,YAAiB,YAAD,uCAAc,WAAMiC,GAAN,eAAA/B,EAAA,+EAI1BP,IAAMQ,KAAK,eAAgB8B,GAJD,cAItCtB,EAJsC,OAS5CiB,EAAUjB,EAAIN,KAAKuB,OATyB,kBAUrCjB,EAAIN,MAViC,sCAY5C6B,QAAQC,IAAI,gBAAZ,MAZ4C,8DAAd,uDAmB5BC,EAAmBpC,YACvB,mBADuC,uCAGvC,WAAMiC,GAAN,eAAA/B,EAAA,+EAGsBP,IAAMQ,KAAK,gBAAiB8B,GAHlD,cAGUtB,EAHV,OAKIiB,EAAUjB,EAAIN,KAAKuB,OALvB,kBAMWjB,EAAIN,MANf,sCAQI6B,QAAQC,IAAI,8BAA+B,KAAME,SARrD,8DAHuC,uDAiBnCC,EAAiBtC,YACrB,iBADqC,uCAErC,WAAOsB,EAAGiB,GAAV,mBAAArC,EAAA,kEAKUgB,EAAQqB,EAASC,WAEjBC,EAAiBvB,EAAMwB,KAAKd,MAClCM,QAAQC,IAAIM,GAEW,OAAnBA,EAVR,yCAWaF,EAASI,mBAXtB,cAaIf,EAAUa,GAbd,mBAgB8B9C,IAAMe,IAAI,kBAhBxC,eAgBYC,EAhBZ,OAiBMuB,QAAQC,IAAI,oBAAqBxB,GAjBvC,kBAkBaA,EAAIN,MAlBjB,mLAFqC,yDA8CxBuC,EAPI,CACjBZ,YACAI,mBACAS,WAZiB7C,YAAiB,aAAD,sBAAe,sBAAAE,EAAA,+EAExCP,IAAMQ,KAAK,iBAF6B,OAG9CyB,IAH8C,mHAahDU,kBCzFIQ,EAAW,CACfC,KAAM,GACNC,MAAO,IAGHC,EAAOlC,YAAc+B,GAAD,iBAAC,EACxBI,EAAelB,UAAUf,WAAY,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAC9C,OAAO,eAAKA,EAAQ8B,SAFE,YAAC,EAKxBC,EAAed,iBAAiBnB,WAAY,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAErD,OAAO,eAAKA,EAAQ8B,SAPE,YAAC,EAUxBC,EAAeZ,eAAerB,WAAY,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAEnD,OADAe,QAAQC,IAAI,mBAAoBhB,GACzB,eAAKA,MAZU,YAAC,EAexB+B,EAAelB,UAAUN,UAAW,SAACR,EAAOC,GAE3C,OAAOD,KAjBe,YAAC,EAmBxBgC,EAAeL,WAAW5B,WAAY,SAACC,EAAOiC,GAC7C,OAAOL,KApBe,IAwBpBlB,EAAQb,YAAc,MAAD,mBACxBmC,EAAelB,UAAUf,WAAY,SAACC,EAAD,GACpC,OAD4D,EAAdC,QAC/BS,SAFQ,cAIxBsB,EAAed,iBAAiBnB,WAAY,SAACC,EAAD,GAC3C,OADmE,EAAdC,QACtCS,SALQ,cAOxBsB,EAAeL,WAAW5B,WAAY,SAACC,EAAOiC,GAC7C,OAAO,QARgB,IAYrBC,EAAarC,aAAc,GAAD,iBAAC,EAC9BmC,EAAelB,UAAUf,WAAY,SAACC,EAAOC,GAC5C,OAAO,KAFqB,YAAC,EAI9B+B,EAAelB,UAAUN,UAAW,SAACR,EAAOC,GAC3C,OAAO,KALqB,YAAC,EAO9B+B,EAAed,iBAAiBnB,WAAY,SAACC,EAAOC,GACnD,OAAO,KARqB,YAAC,EAU9B+B,EAAed,iBAAiBV,UAAW,SAACR,EAAOC,GAClD,OAAO,KAXqB,YAAC,EAa9B+B,EAAeL,WAAW5B,WAAY,SAACC,EAAOC,GAC7C,OAAO,KAdqB,YAAC,EAgB9B+B,EAAeZ,eAAerB,WAAY,SAACC,EAAOC,GAAR,OAAoB,KAhBjC,IAmBjBQ,cAAgB,CAC7BsB,OACArB,QACAwB,eClDIC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUC,EACV9B,KAAM+B,YAAeT,EAAmBU,IAE1CC,UAAUC,EACVC,WAAYxB,IAIDyB,EAAYC,YAAaX,G,yBClCvBY,EALO,CACpBC,cALoB,SAAA/D,GAAK,OAAIA,EAAMwB,KAAKU,YAMxC8B,SAJe,SAAAhE,GAAK,OAAIA,EAAMwB,KAAKO,KAAKF,O,4DCYpCoC,I,OAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAQ,OACRC,WAAY,WACZ,kBAAmB,CACjBC,OAAQJ,EAAMK,QAAQ,EAAG,WAKhB,SAASC,KACtB,IAAMC,EAAWC,YAAYb,EAAcE,UACrCY,EAAWC,cAEXC,EAAIb,KAEV,OACE,sBAAKc,UAAWD,EAAEV,KAAlB,UACE,eAACY,GAAA,EAAD,WACGN,EAAS,GADZ,IACiBA,EAAS,MAG1B,cAACO,GAAA,EAAD,CAAYZ,QAAQ,QAApB,SAA6BK,IAE7B,cAACQ,GAAA,EAAD,CACEC,QAAS,WACPP,EAAS5C,EAAeL,eAE1ByD,KAAK,QACLC,QAAQ,YALV,qB,wBCxBApB,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJkB,SAAU,GAEZC,WAAY,CACVC,YAAarB,EAAMK,QAAQ,IAE7BiB,MAAO,CACLH,SAAU,OAIC,SAASI,KACtB,IAAMC,EAAU1B,KACR2B,EAAQC,cAARD,IAEFE,EAAWnB,YAAYb,EAAcC,eAE3C,OACE,qBAAKgB,UAAWY,EAAQvB,KAAxB,SACE,cAAC2B,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,GAAA,EAAD,WACE,eAAChB,GAAA,EAAD,CAAYI,QAAQ,SAASN,UAAWY,EAAQF,MAAhD,UACE,cAAC,IAAD,CAASV,UAAWD,KAAEoB,QAASC,GAAE,UAAKP,GAAtC,kBAGA,cAAC,IAAD,CAASb,UAAWD,KAAEoB,QAASC,GAAE,UAAKP,EAAL,YAAjC,yBAIDE,EACC,8BACE,cAACrB,GAAD,MAGF,eAACQ,GAAA,EAAD,CACEmB,MAAM,QACNf,QAAQ,SACRN,UAAWY,EAAQF,MAHrB,UAKE,cAAC,IAAD,CAASV,UAAWD,KAAEoB,QAASC,GAAE,UAAKP,EAAL,SAAjC,mBAGA,cAAC,IAAD,CAASb,UAAWD,KAAEoB,QAASC,GAAE,UAAKP,EAAL,gBAAjC,oC,aCzDDS,GAAc,SAAArG,GAAK,OAAIA,EAAMqD,SAASzD,OAEtC0G,GAAqB,SAAAtG,GAAU,IAAD,EACfA,EAAMqD,SAAxBzD,EADiC,EACjCA,MAIF2G,EALmC,EAC1BrG,OAIiBsG,cAKhC,OAJwB5G,EAAMM,QAAO,SAAAuG,GAAO,OAC1CA,EAAQ5E,KAAK2E,cAAcE,SAASH,O,wCCElCtC,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBG,OAAQJ,EAAMK,QAAQ,EAAG,EAAG,GAC5BmC,MAAO,SAGXC,KAAM,CACJD,MAAO,QAETE,IAAK,CACHF,MAAO,OACPpC,OAAQJ,EAAMK,QAAQ,EAAG,EAAG,QAgGjBsC,OA5Ff,WACE,IAAMC,EAAQ9C,KADU,EAGA+C,mBAAS,IAHT,oBAGjBnF,EAHiB,KAGXoF,EAHW,OAIID,mBAAS,IAJb,oBAIjBE,EAJiB,KAITC,EAJS,KAMlBvC,EAAWC,cACXxB,EAAWsB,YAAYyC,IAyBvBC,EAAY,WAChBJ,EAAQ,IACRE,EAAU,KAGNG,EAAW,SAAAC,GAAU,IAAD,EACAA,EAAMC,cAAtB3F,EADgB,EAChBA,KAAM4F,EADU,EACVA,MACd,OAAQ5F,GACN,IAAK,OACHoF,EAAQQ,GACR,MAEF,IAAK,SACHN,EAAUM,GACV,MAEF,QACE,SAIN,OACE,sBAAM1C,UAAWD,KAAE8B,KAAMc,SAlCR,SAAAH,GACjBA,EAAMI,iBAZe,SAAA9F,GACrB,IAAM+F,EAAiB/F,EAAK2E,cAC5B,GACEnD,EAASwE,MAAK,SAAApB,GAAO,OAAIA,EAAQ5E,KAAK2E,gBAAkBoB,KAGxD,OADAE,OAAOC,MAAP,UAAgBlG,EAAhB,4BACO,EAOLmG,CAAenG,KAInB+C,EAASqD,EAAkBpJ,YAAY,CAAEgD,OAAMqF,YAE/CG,MA0BA,SACE,eAACa,GAAA,EAAD,CAAanD,UAAWgC,EAAM3C,KAA9B,UACE,cAAC+D,GAAA,EAAD,CACEtG,KAAK,OACLyF,SAAUA,EACVnH,GAAG,OACHiI,MAAM,OACNX,MAAO5F,EACPwD,QAAQ,WACRgD,YAAY,qBACZjD,KAAK,UAGP,cAAC+C,GAAA,EAAD,CACEtG,KAAK,SACLyF,SAAUA,EACVnH,GAAG,SACHiI,MAAM,SACNX,MAAOP,EACP7B,QAAQ,WACRgD,YAAY,uBACZjD,KAAK,UAEP,cAACF,GAAA,EAAD,CACEoD,KAAK,SACLvD,UAAWgC,EAAMF,IACjBzB,KAAK,QACLmD,WAAS,EACTlD,QAAQ,WACRmD,MAAM,UANR,+BCvER,IAQeC,gBARS,SAAAzI,GAAK,MAAK,CAChCyH,MAAOzH,EAAMqD,SAASnD,WAGG,SAAA0E,GAAQ,MAAK,CACtC0C,SAAU,SAAAG,GAAK,OAAI7C,EAASvE,EAAQX,aAAa+H,EAAMiB,OAAOjB,YAGjDgB,EAnCf,YAAsC,IAApBnB,EAAmB,EAAnBA,SAAUG,EAAS,EAATA,MAC1B,OACE,mCAWE,cAACU,GAAA,EAAD,CACEtG,KAAK,SACLyF,SAAUA,EACVnH,GAAG,SACHiI,MAAM,gBACNX,MAAOA,EACPpC,QAAQ,WACRgD,YAAY,uBACZjD,KAAK,e,+ECVPuD,GAAU,CACd,CAAExI,GAAI,OAAQiI,MAAO,OAAQQ,SAAU,KACvC,CAAEzI,GAAI,SAAUiI,MAAO,SAAUQ,SAAU,KAC3C,CACEzI,GAAI,MACJiI,MAAO,MACPQ,SAAU,GACVxC,MAAO,WAILnC,GAAYC,aAAW,CAC3BE,KAAM,CACJuC,MAAO,QAETkC,UAAW,CACTC,UAAW,OAiIAC,OA9Gf,WACE,IAAMnE,EAAWC,cACXxB,EAAWsB,YAAYqE,IAEvBrD,EAAU1B,KAJE,EAKM+C,mBAAS,GALf,oBAKXiC,EALW,aAMoBjC,mBAAS,KAN7B,oBAMXkC,EANW,KAiBlB,OAjBkB,KA2ChB,aAzBA,CAyBCC,GAAA,EAAD,CAAOpE,UAAWY,EAAQvB,KAA1B,SACE,cAACgF,GAAA,EAAD,CAAgBrE,UAAWY,EAAQkD,UAAnC,SACE,eAACQ,GAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,eAA/B,UACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGd,GAAQe,KAAI,SAAAC,GAAM,OACjB,cAACC,GAAA,EAAD,CAEExD,MAAOuD,EAAOvD,MACdW,MAAO,CAAE6B,SAAUe,EAAOf,UAH5B,SAKGe,EAAOvB,OAJHuB,EAAOxJ,WASpB,cAAC0J,GAAA,EAAD,UACGxG,EACEyG,MAAMb,EAAOC,EAAaD,EAAOC,EAAcA,GAC/CQ,KAAI,SAAAK,GACH,OACE,cAACN,GAAA,EAAD,CAAUO,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,SACGvB,GAAQe,KAAI,SAAAC,GACX,IAAMlC,EAAQsC,EAAIJ,EAAOxJ,IAGzB,OACE,cAACyJ,GAAA,EAAD,CAA2BxD,MAAOuD,EAAOvD,MAAzC,gBACGqB,QADH,IACGA,IACC,cAACvC,GAAA,EAAD,CACEsD,MAAM,YACN2B,UAAU,SACV9E,QAAQ,WACRD,KAAK,QACLD,QAAS,kBACPP,EACEwF,EAAkBhL,eAAe2K,EAAI5J,MAP3C,kBAFYwJ,EAAOxJ,QANsB4J,EAAI5J,iB,oBC/E1DkK,OAzBf,WACE,IAAMzF,EAAWC,cACXyF,EAAW3F,YAAYb,EAAcC,eAM3C,OAJAwG,qBAAU,WACR3F,EAASqD,EAAkB1I,kBAC1B,CAACqF,IAGF,mCACE,sBAAKG,UAAWgC,KAAM8B,UAAtB,UACE,sBAAK9D,UAAWgC,KAAMyD,cAAtB,UACE,mBAAGzF,UAAWgC,KAAMtB,MAApB,uBACA,cAAC,GAAD,OAEF,sBAAKV,UAAWgC,KAAM0D,kBAAtB,UACE,mBAAG1F,UAAWgC,KAAMtB,MAApB,sBACA,cAAC,GAAD,IACC6E,GAAY,cAAC,GAAD,a,UCzBR,SAASI,GAAT,GAAwC,IAAbC,EAAY,EAAZA,SACxC,OACE,mCACE,cAACC,GAAA,EAAD,CAAWC,SAAS,KAApB,SAA0BF,MCNhC,IAAMG,GAAS,CACbjC,UAAW,CACTkC,UAAW,qBACX1G,QAAS,OACTC,WAAY,SACZ0G,eAAgB,UAElBvF,MAAO,CACLwF,WAAY,IACZC,SAAU,GACVC,UAAW,WAUAC,GANE,kBACf,qBAAKrE,MAAO+D,GAAOjC,UAAnB,SACE,qBAAI9B,MAAO+D,GAAOrF,MAAlB,8NAAiE,WCR/DxB,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBG,OAAQJ,EAAMK,QAAQ,EAAG,EAAG,GAC5BmC,MAAO,SAGXC,KAAM,CACJD,MAAO,QAETE,IAAK,CACHF,MAAO,OACPpC,OAAQJ,EAAMK,QAAQ,EAAG,EAAG,QAIjB,SAAS6G,KACtB,IAAM1F,EAAU1B,KADc,EAEJ+C,mBAAS,eAFL,oBAEvBlF,EAFuB,KAEhBwJ,EAFgB,OAGEtE,mBAAS,YAHX,oBAGvBuE,EAHuB,KAGbC,EAHa,KAKxB5G,EAAWC,cAUX4G,EAAe,SAAAlE,GAAU,IAAD,EACJA,EAAMC,cAAtB3F,EADoB,EACpBA,KAAM4F,EADc,EACdA,MAEd,OAAQ5F,GACN,IAAK,QACHyJ,EAAS7D,GACT,MAEF,IAAK,WACH+D,EAAY/D,GACZ,MAEF,QACE,SAGAJ,EAAY,WAChBiE,EAAS,IACTE,EAAY,KAEd,OACE,qCACE,iDACA,sBACEzG,UAAWY,EAAQiB,KACnB8E,YAAU,EACVC,aAAa,MACbjE,SAnCW,SAAAH,GACfA,EAAMI,iBAGN/C,EAAS5C,EAAelB,UAAU,CAAEgB,QAAOyJ,cAC3ClE,KA0BE,SAME,eAACa,GAAA,EAAD,CAAanD,UAAWY,EAAQvB,KAAhC,UACE,cAAC+D,GAAA,EAAD,CACEtG,KAAK,QACLyF,SAAUmE,EACVG,UAAQ,EACRzL,GAAG,QACHiI,MAAM,SACNX,MAAO3F,EACPuD,QAAQ,WACRgD,YAAY,mBACZjD,KAAK,QACLkD,KAAK,UAGP,cAACH,GAAA,EAAD,CACEtG,KAAK,WACLyF,SAAUmE,EACVG,UAAQ,EACRzL,GAAG,WACHiI,MAAM,WACNX,MAAO8D,EACPlG,QAAQ,WACRgD,YAAY,sBACZC,KAAK,WACLlD,KAAK,UAEP,cAACF,GAAA,EAAD,CACEoD,KAAK,SACLvD,UAAWY,EAAQkB,IACnBzB,KAAK,QACLmD,WAAS,EACTlD,QAAQ,WACRmD,MAAM,UANR,2BC1FKqD,OAJf,WACE,OAAO,cAACR,GAAD,KCKHpH,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBG,OAAQJ,EAAMK,QAAQ,EAAG,EAAG,GAC5BmC,MAAO,SAGXC,KAAM,CACJD,MAAO,QAETE,IAAK,CACHF,MAAO,OACPpC,OAAQJ,EAAMK,QAAQ,EAAG,EAAG,QAIjB,SAAS6G,KACtB,IAAM1F,EAAU1B,KADc,EAEJ+C,mBAAS,IAFL,oBAEvB8E,EAFuB,KAEhBC,EAFgB,OAGE/E,mBAAS,IAHX,oBAGvBuE,EAHuB,KAGbC,EAHa,OAIJxE,mBAAS,IAJL,oBAIvBlF,EAJuB,KAIhBwJ,EAJgB,KAMxB1G,EAAWC,cAcX4G,EAAe,SAAAlE,GAAU,IAAD,EACJA,EAAMC,cAAtB3F,EADoB,EACpBA,KAAM4F,EADc,EACdA,MAEd,OAAQ5F,GACN,IAAK,QACHkK,EAAStE,GACT,MAEF,IAAK,WACH+D,EAAY/D,GACZ,MAEF,IAAK,QACH6D,EAAS7D,GACT,MAEF,QACE,SAIAJ,EAAY,WAChBmE,EAAY,IACZO,EAAS,IACTT,EAAS,KAGX,OACE,qCACE,kEACA,sBACEvG,UAAWY,EAAQiB,KACnB8E,YAAU,EACVC,aAAa,MACbjE,SA9CW,SAAAH,GACfA,EAAMI,iBAEN,IAAMqE,EAAU,CACdnK,KAAMiK,EACNP,WACAzJ,SAEF8C,EAAS5C,EAAed,iBAAiB8K,IACzC3E,KAiCE,SAME,eAACa,GAAA,EAAD,CAAanD,UAAWY,EAAQvB,KAAhC,UACE,cAAC+D,GAAA,EAAD,CACEtG,KAAK,QACLyF,SAAUmE,EACVG,UAAQ,EACRzL,GAAG,QACHiI,MAAM,QACNX,MAAOqE,EACPzG,QAAQ,WACRgD,YAAY,mBACZjD,KAAK,UAGP,cAAC+C,GAAA,EAAD,CACEtG,KAAK,QACLyF,SAAUmE,EACVG,UAAQ,EACRzL,GAAG,QACHiI,MAAM,SACNX,MAAO3F,EACPuD,QAAQ,WACRgD,YAAY,oBACZjD,KAAK,UAGP,cAAC+C,GAAA,EAAD,CACEtG,KAAK,WACLyF,SAAUmE,EACVG,UAAQ,EACRzL,GAAG,WACHiI,MAAM,WACNX,MAAO8D,EACPlG,QAAQ,WACRgD,YAAY,sBACZC,KAAK,WACLlD,KAAK,UAEP,cAACF,GAAA,EAAD,CACEoD,KAAK,SACLvD,UAAWY,EAAQkB,IACnBzB,KAAK,QACLmD,WAAS,EACTlD,QAAQ,WACRmD,MAAM,UANR,kCC/GKyD,OAJf,WACE,OAAO,cAAC,GAAD,KCqCMC,OA3Bf,WAAe,IAELtG,EAAQC,cAARD,IACFhB,EAAWC,cAUjB,OARA0F,qBAAU,WAER,OADA3F,EAASuH,EAAc/K,kBAChB,eACN,CAACwD,IAMF,eAAC,GAAD,WACE,cAAC,GAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwH,OAAK,EAACC,KAAI,UAAKzG,GAAOuE,UAAWiB,KACxC,cAAC,IAAD,CAAOiB,KAAI,UAAKzG,EAAL,YAAoBuE,UAAWE,KAC1C,cAAC,IAAD,CAAOgC,KAAI,UAAKzG,EAAL,SAAiBuE,UAAW0B,KACvC,cAAC,IAAD,CAAOQ,KAAI,UAAKzG,EAAL,gBAAwBuE,UAAW8B,YCtBvCK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU/J,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAagK,QAAS,KAAMtJ,UAAWA,EAAvC,SACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKRuJ,SAASC,eAAe,SAM1Bd,M,mBC1BA/N,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,cAAgB,mCAAmC,kBAAoB,yC,mBCAvKD,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,uB","file":"static/js/main.cfb066da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"Contacts_contactList__HpZdI\",\"item\":\"Contacts_item__nZKOG\",\"contactItem\":\"Contacts_contactItem__3EB81\"};","import axios from 'axios';\r\n// import actions from './contacts-actions';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\n/**добавлення онтакту */\r\n\r\nconst addContacts = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async newContact => {\r\n    const response = await axios.post('/contacts', newContact);\r\n    return response.data;\r\n  },\r\n);\r\n\r\nconst deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async idcontact => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const _ = await axios.delete(`/contacts/${idcontact}`);\r\n    return idcontact;\r\n  },\r\n);\r\n\r\n/**завантаження контактів з БД */\r\nconst loadContacts = createAsyncThunk('contacts/loadContacts', async () => {\r\n  const res = await axios.get(`/contacts`);\r\n  return res.data;\r\n});\r\n\r\nconst obj = {\r\n  addContacts,\r\n  deleteContacts,\r\n  loadContacts,\r\n};\r\n\r\nexport default obj;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const addContactsSuccess = createAction('contacts/addContactsSeccess');\r\n// const addContactsRequest = createAction('contacts/addContactsRequest');\r\n// const addContactsError = createAction('contacts/addContactsError');\r\n\r\n// const deleteContactsSuccess = createAction('contacts/deleteContactsSeccess');\r\n// const deleteContactsRequest = createAction('contacts/deleteContactsRequest');\r\n// const deleteContactsError = createAction('contacts/deleteContactsError');\r\n\r\n// const loadContactsRequest = createAction('contacts/loadContactsRequest');\r\n// const loadContactsSuccess = createAction('contacts/loadContactsSuccess');\r\n// const loadContactsError = createAction('contacts/loadContactsError');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst obj = {\r\n  // addContactsSuccess,\r\n  // addContactsRequest,\r\n  // addContactsError,\r\n  // deleteContactsSuccess,\r\n  // deleteContactsRequest,\r\n  // deleteContactsError,\r\n\r\n  // loadContactsRequest,\r\n  // loadContactsSuccess,\r\n  // loadContactsError,\r\n  changeFilter,\r\n};\r\n\r\nexport default obj;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactOperations from './contacts-operations';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [contactOperations.addContacts.fulfilled]: (state, { payload }) => {\r\n    // console.log(payload);\r\n\r\n    const updateState = [...state, payload];\r\n\r\n    return updateState;\r\n  },\r\n  [contactOperations.deleteContacts.fulfilled]: (state, { payload }) => {\r\n    // console.log('delete:', payload);\r\n    const updateState = state.filter(({ id }) => id !== payload);\r\n\r\n    return updateState;\r\n  },\r\n  [contactOperations.loadContacts.fulfilled]: (_, { payload }) => {\r\n    // console.log(payload);\r\n    return payload;\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => {\r\n    return payload;\r\n  },\r\n});\r\n\r\nconst load = createReducer(false, {\r\n  [contactOperations.addContacts.pending]: () => true,\r\n  [contactOperations.addContacts.fulfilled]: () => false,\r\n  [contactOperations.addContacts.rejected]: () => false,\r\n\r\n  [contactOperations.deleteContacts.pending]: () => true,\r\n  [contactOperations.deleteContacts.fulfilled]: () => false,\r\n  [contactOperations.deleteContacts.rejected]: () => false,\r\n\r\n  [contactOperations.loadContacts.pending]: () => true,\r\n  [contactOperations.loadContacts.fulfilled]: () => false,\r\n  [contactOperations.loadContacts.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  load,\r\n});\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n//вхід користувача\r\nconst loginUser = createAsyncThunk('loginUser', async credentials => {\r\n  try {\r\n    // console.log('Login credentials:', credentials);\r\n\r\n    const res = await axios.post('/users/login', credentials);\r\n\r\n    // console.log('Login response: ', res);\r\n    // console.log('Login tokin: ', res.token);\r\n\r\n    token.set(res.data.token);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log('error state: ', error);\r\n    // return rejectWithValue(error.response.data);\r\n    throw error;\r\n  }\r\n});\r\n\r\n//створення користувача\r\nconst registrationUser = createAsyncThunk(\r\n  'registrationUser',\r\n\r\n  async credentials => {\r\n    try {\r\n      //   console.log('Registration credentials', credentials);\r\n      const res = await axios.post('/users/signup', credentials);\r\n      //   console.log('Registration response', res.data);\r\n      token.set(res.data.token);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.log('Registration response error', error.message);\r\n      throw error;\r\n    }\r\n  },\r\n);\r\n\r\nconst getCurrentUser = createAsyncThunk(\r\n  'getCurrentUser',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      // const res = await axios.post('/users/login', token);\r\n      // token.set(res.data.token);\r\n      // return res.data;\r\n      const state = thunkAPI.getState();\r\n      // console.log('state getCurrentUser:', state);\r\n      const tokenPersister = state.auth.token;\r\n      console.log(tokenPersister);\r\n\r\n      if (tokenPersister === null) {\r\n        return thunkAPI.rejectWithValue();\r\n      }\r\n      token.set(tokenPersister);\r\n\r\n      try {\r\n        const res = await await axios.get('/users/current');\r\n        console.log('res currentUser: ', res);\r\n        return res.data;\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n);\r\n\r\nconst logOutUser = createAsyncThunk('logoutUser', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n});\r\n\r\nconst operations = {\r\n  loginUser,\r\n  registrationUser,\r\n  logOutUser,\r\n  getCurrentUser,\r\n};\r\n\r\nexport default operations;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport operationsUser from './user-operations';\r\n\r\nconst initUser = {\r\n  name: '',\r\n  email: '',\r\n};\r\n\r\nconst user = createReducer(initUser, {\r\n  [operationsUser.loginUser.fulfilled]: (state, { payload }) => {\r\n    return { ...payload.user };\r\n  },\r\n\r\n  [operationsUser.registrationUser.fulfilled]: (state, { payload }) => {\r\n    // console.log('payload', payload);\r\n    return { ...payload.user };\r\n  },\r\n\r\n  [operationsUser.getCurrentUser.fulfilled]: (state, { payload }) => {\r\n    console.log('payloadCurrent: ', payload);\r\n    return { ...payload };\r\n  },\r\n\r\n  [operationsUser.loginUser.rejected]: (state, payload) => {\r\n    // console.log('operationsUser.loginUser.rejected');\r\n    return state;\r\n  },\r\n  [operationsUser.logOutUser.fulfilled]: (state, action) => {\r\n    return initUser;\r\n  },\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [operationsUser.loginUser.fulfilled]: (state, { payload }) => {\r\n    return payload.token;\r\n  },\r\n  [operationsUser.registrationUser.fulfilled]: (state, { payload }) => {\r\n    return payload.token;\r\n  },\r\n  [operationsUser.logOutUser.fulfilled]: (state, action) => {\r\n    return null;\r\n  },\r\n});\r\n\r\nconst isLoggedIn = createReducer(false, {\r\n  [operationsUser.loginUser.fulfilled]: (state, payload) => {\r\n    return true;\r\n  },\r\n  [operationsUser.loginUser.rejected]: (state, payload) => {\r\n    return false;\r\n  },\r\n  [operationsUser.registrationUser.fulfilled]: (state, payload) => {\r\n    return true;\r\n  },\r\n  [operationsUser.registrationUser.rejected]: (state, payload) => {\r\n    return false;\r\n  },\r\n  [operationsUser.logOutUser.fulfilled]: (state, payload) => {\r\n    return false;\r\n  },\r\n  [operationsUser.getCurrentUser.fulfilled]: (state, payload) => true,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isLoggedIn,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport phoneBook from './contacts/contacts-reducer';\r\nimport userData from './users/users-reducer';\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst middleWare = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: phoneBook,\r\n    auth: persistReducer(authPersistConfig, userData),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: middleWare,\r\n});\r\n\r\n// export default store;\r\nexport const persistor = persistStore(store);\r\n","const getIsLoggenIn = state => state.auth.isLoggedIn;\r\n\r\nconst getLogin = state => state.auth.user.name;\r\n\r\nconst userSelectors = {\r\n  getIsLoggenIn,\r\n  getLogin,\r\n};\r\n\r\nexport default userSelectors;\r\n","import React from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport userSelectors from '../redux/users/user-selectors';\r\n\r\nimport operationsUser from '../redux/users/user-operations';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport s from './UserMenu.module.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: `flex`,\r\n    alignItems: 'baseline',\r\n    '& :nth-child(n)': {\r\n      margin: theme.spacing(0, 0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UserMenu() {\r\n  const userName = useSelector(userSelectors.getLogin);\r\n  const dispatch = useDispatch();\r\n\r\n  const s = useStyles();\r\n\r\n  return (\r\n    <div className={s.root}>\r\n      <Avatar>\r\n        {userName[0]} {userName[1]}\r\n      </Avatar>\r\n\r\n      <Typography display=\"block\">{userName}</Typography>\r\n\r\n      <Button\r\n        onClick={() => {\r\n          dispatch(operationsUser.logOutUser());\r\n        }}\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n      >\r\n        Exit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport userSelectors from '../redux/users/user-selectors';\r\n\r\nimport { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport UserMenu from '../UserMenu';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport s from './AppBar.module.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const { url } = useRouteMatch();\r\n\r\n  const isLoggIn = useSelector(userSelectors.getIsLoggenIn);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"button\" className={classes.title}>\r\n            <NavLink className={s.navLink} to={`${url}`}>\r\n              Home\r\n            </NavLink>\r\n            <NavLink className={s.navLink} to={`${url}contacts`}>\r\n              Contacts\r\n            </NavLink>\r\n          </Typography>\r\n          {isLoggIn ? (\r\n            <div>\r\n              <UserMenu />\r\n            </div>\r\n          ) : (\r\n            <Typography\r\n              align=\"right\"\r\n              variant=\"button\"\r\n              className={classes.title}\r\n            >\r\n              <NavLink className={s.navLink} to={`${url}login`}>\r\n                Login\r\n              </NavLink>\r\n              <NavLink className={s.navLink} to={`${url}registration`}>\r\n                Registration\r\n              </NavLink>\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","export const getContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const { items, filter } = state.contacts;\r\n  // console.log('items: ', items);\r\n  // console.log('state: ', state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n\r\n  return visibleContacts;\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport contactsOperation from '../redux/contacts/contacts-operations';\r\nimport * as contactsSelector from '../redux/contacts/contacts-selectors';\r\n\r\nimport s from './form.module.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormControl, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1, 0, 1),\r\n      width: '35ch',\r\n    },\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n  },\r\n  btn: {\r\n    width: '20ch',\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction FormAddContact() {\r\n  const style = useStyles();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelector.getContacts);\r\n\r\n  const isExistContact = name => {\r\n    const normalizedName = name.toLowerCase();\r\n    if (\r\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\r\n    ) {\r\n      window.alert(`${name} is alredy in contacts`);\r\n      return true;\r\n    }\r\n  };\r\n  // console.log('/-/:', contacts);\r\n\r\n  const formSubmit = event => {\r\n    event.preventDefault();\r\n    if (isExistContact(name)) {\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperation.addContacts({ name, number }));\r\n\r\n    resetForm();\r\n  };\r\n\r\n  /**Скидання форми */\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const onChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case 'name': {\r\n        setName(value);\r\n        break;\r\n      }\r\n      case 'number': {\r\n        setNumber(value);\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={formSubmit}>\r\n      <FormControl className={style.root}>\r\n        <TextField\r\n          name=\"name\"\r\n          onChange={onChange}\r\n          id=\"name\"\r\n          label=\"Name\"\r\n          value={name}\r\n          variant=\"outlined\"\r\n          placeholder=\"Enter contact Name\"\r\n          size=\"small\"\r\n        />\r\n\r\n        <TextField\r\n          name=\"number\"\r\n          onChange={onChange}\r\n          id=\"number\"\r\n          label=\"Number\"\r\n          value={number}\r\n          variant=\"outlined\"\r\n          placeholder=\"Enter contact Number\"\r\n          size=\"small\"\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          className={style.btn}\r\n          size=\"small\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n        >\r\n          Add Contact\r\n        </Button>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default FormAddContact;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../redux/contacts/contacts-actions';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import s from './Filter.module.css';\r\n\r\nfunction Filter({ onChange, value }) {\r\n  return (\r\n    <>\r\n      {/* <label className={s.filter}>\r\n        <span>Filter:</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          onChange={onChange}\r\n          value={value}\r\n        />\r\n      </label> */}\r\n      <TextField\r\n        name=\"filter\"\r\n        onChange={onChange}\r\n        id=\"filter\"\r\n        label=\"Find contacts\"\r\n        value={value}\r\n        variant=\"outlined\"\r\n        placeholder=\"Enter contact filter\"\r\n        size=\"small\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: value => dispatch(actions.changeFilter(value.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport actionsOperations from '../redux/contacts/contacts-operations';\r\nimport s from './Contacts.module.css';\r\nimport * as contactsSelectors from '../redux/contacts/contacts-selectors';\r\nimport { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 100 },\r\n  { id: 'number', label: 'Number', minWidth: 200 },\r\n  {\r\n    id: 'btn',\r\n    label: 'Reg',\r\n    minWidth: 70,\r\n    align: 'center',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\n// function StickyHeadTable() {\r\n//   const classes = useStyles();\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n//   const handleChangePage = (event, newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   const handleChangeRowsPerPage = (event) => {\r\n//     setRowsPerPage(+event.target.value);\r\n//     setPage(0);\r\n//   };\r\n// }\r\n\r\nfunction Contacts() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    // <ul className={s.contactList}>\r\n    //   {contacts &&\r\n    //     contacts.map(c => {\r\n    //       return (\r\n    //         <li className={s.item} key={c.id}>\r\n    //           <p className={s.contactItem}>\r\n    //             <span>\r\n    //               <strong>{c.name}:</strong> {c.number}\r\n    //             </span>\r\n    //             <button\r\n    //               className=\"btn\"\r\n    //               onClick={() =>\r\n    //                 dispatch(actionsOperations.deleteContacts(c.id))\r\n    //               }\r\n    //             >\r\n    //               Delete\r\n    //             </button>\r\n    //           </p>\r\n    //         </li>\r\n    //       );\r\n    //     })}\r\n    // </ul>\r\n\r\n    //------\r\n\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {contacts\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      // console.log(value);\r\n\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value ?? (\r\n                            <Button\r\n                              color=\"secondary\"\r\n                              component=\"button\"\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              onClick={() =>\r\n                                dispatch(\r\n                                  actionsOperations.deleteContacts(row.id),\r\n                                )\r\n                              }\r\n                            >\r\n                              Del\r\n                            </Button>\r\n                          )}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {/* <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={contacts.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      /> */}\r\n    </Paper>\r\n\r\n    //--------------\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ContactForm from '../components/FormAdd';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\n\r\nimport contactsOperation from '../components/redux/contacts/contacts-operations';\r\nimport userSelectors from '../components/redux/users/user-selectors';\r\n\r\nimport style from './css/ContactView.module.css';\r\n\r\nfunction ContactsView() {\r\n  const dispatch = useDispatch();\r\n  const isloggIn = useSelector(userSelectors.getIsLoggenIn);\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperation.loadContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className={style.container}>\r\n        <div className={style.formContainer}>\r\n          <p className={style.title}>Phonebook</p>\r\n          <ContactForm />\r\n        </div>\r\n        <div className={style.contactsContainer}>\r\n          <p className={style.title}>Contacts</p>\r\n          <Filter />\r\n          {isloggIn && <ContactList />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsView;\r\n","import React from 'react';\r\n\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport default function SimpleContainer({ children }) {\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"md\">{children}</Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  container: {\r\n    minHeight: 'calc(100vh - 50px)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontWeight: 500,\r\n    fontSize: 48,\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nconst HomeView = () => (\r\n  <div style={styles.container}>\r\n    <h1 style={styles.title}>Вітання у книзі персональних контактів {':)'}</h1>\r\n  </div>\r\n);\r\n\r\nexport default HomeView;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport operationsUser from '../redux/users/user-operations';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1, 0, 1),\r\n      width: '35ch',\r\n    },\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n  },\r\n  btn: {\r\n    width: '20ch',\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState('edc@ukr.net');\r\n  const [password, setPassword] = useState('qwer4321');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    // console.log(email, password);\r\n\r\n    dispatch(operationsUser.loginUser({ email, password }));\r\n    resetForm();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'email': {\r\n        setEmail(value);\r\n        break;\r\n      }\r\n      case 'password': {\r\n        setPassword(value);\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const resetForm = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Login to system</h1>\r\n      <form\r\n        className={classes.form}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <FormControl className={classes.root}>\r\n          <TextField\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            required\r\n            id=\"email\"\r\n            label=\"E-mail\"\r\n            value={email}\r\n            variant=\"outlined\"\r\n            placeholder=\"Enter your Email\"\r\n            size=\"small\"\r\n            type=\"email\"\r\n          />\r\n\r\n          <TextField\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            required\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            value={password}\r\n            variant=\"outlined\"\r\n            placeholder=\"Enter your Password\"\r\n            type=\"password\"\r\n            size=\"small\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            className={classes.btn}\r\n            size=\"small\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </FormControl>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import Login from '../components/Login';\r\n\r\nfunction LoginView() {\r\n  return <Login />;\r\n}\r\n\r\nexport default LoginView;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport operationsUser from '../redux/users/user-operations';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1, 0, 1),\r\n      width: '35ch',\r\n    },\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n  },\r\n  btn: {\r\n    width: '20ch',\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    // console.log(login, password, email);\r\n    const objUser = {\r\n      name: login,\r\n      password,\r\n      email,\r\n    };\r\n    dispatch(operationsUser.registrationUser(objUser));\r\n    resetForm();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'login': {\r\n        setLogin(value);\r\n        break;\r\n      }\r\n      case 'password': {\r\n        setPassword(value);\r\n        break;\r\n      }\r\n      case 'email': {\r\n        setEmail(value);\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setPassword('');\r\n    setLogin('');\r\n    setEmail('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Registration to System Phonebook</h1>\r\n      <form\r\n        className={classes.form}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <FormControl className={classes.root}>\r\n          <TextField\r\n            name=\"login\"\r\n            onChange={handleChange}\r\n            required\r\n            id=\"login\"\r\n            label=\"Login\"\r\n            value={login}\r\n            variant=\"outlined\"\r\n            placeholder=\"Enter your Login\"\r\n            size=\"small\"\r\n          />\r\n\r\n          <TextField\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            required\r\n            id=\"email\"\r\n            label=\"E-mail\"\r\n            value={email}\r\n            variant=\"outlined\"\r\n            placeholder=\"Enter your E-mail\"\r\n            size=\"small\"\r\n          />\r\n\r\n          <TextField\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            required\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            value={password}\r\n            variant=\"outlined\"\r\n            placeholder=\"Enter your Password\"\r\n            type=\"password\"\r\n            size=\"small\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            className={classes.btn}\r\n            size=\"small\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            Registration\r\n          </Button>\r\n        </FormControl>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import Registrstion from '../components/Registration';\r\n\r\nfunction RegistrationView() {\r\n  return <Registrstion />;\r\n}\r\n\r\nexport default RegistrationView;\r\n","import { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport operationUser from './components/redux/users/user-operations';\n\nimport AppBar from './components//AppBar';\nimport ContactsView from './views/ContactsView';\nimport Container from './components/Container';\nimport HomeView from './views/HomeView';\nimport LoginView from './views/LoginView';\nimport RegistrationView from './views/RegistrationView';\n\nfunction App() {\n  // const { pathname } = useLocation();\n  const { url } = useRouteMatch();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operationUser.getCurrentUser());\n    return () => {};\n  }, [dispatch]);\n\n  // console.log('location:', pathname);\n  // console.log('url: ', url);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Switch>\n        <Route exact path={`${url}`} component={HomeView} />\n        <Route path={`${url}contacts`} component={ContactsView} />\n        <Route path={`${url}login`} component={LoginView} />\n        <Route path={`${url}Registration`} component={RegistrationView} />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './components/redux/store';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactView_container__3wWv3\",\"title\":\"ContactView_title__2b4rd\",\"formContainer\":\"ContactView_formContainer__1Sz_m\",\"contactsContainer\":\"ContactView_contactsContainer__2yUf3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"AppBar_navLink__3FFMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__2ozBI\",\"input\":\"form_input__1qKkF\"};"],"sourceRoot":""}